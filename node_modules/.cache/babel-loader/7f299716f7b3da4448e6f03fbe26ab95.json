{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\yurongFiles\\\\vikingship\\\\src\\\\components\\\\Button\\\\button.tsx\";\nimport React from 'react';\nimport classnames from 'classnames';\n\nconst Button = props => {\n  const {\n    size,\n    children,\n    buttonType,\n    disabled,\n    href,\n    className,\n    ...restProps\n  } = props;\n  const classes = classnames('btn', className, {\n    [`btn-${buttonType}`]: buttonType,\n    [`btn-${size}`]: size,\n    'disabled': buttonType === \"link\" && disabled\n  });\n\n  if (buttonType === \"link\" && href) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classes,\n      href: href,\n      ...restProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes,\n      disabled: disabled,\n      ...restProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = Button;\nButton.defaultProps = {\n  disabled: false,\n  buttonType: \"default\"\n};\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["D:/yurongFiles/vikingship/src/components/Button/button.tsx"],"names":["React","classnames","Button","props","size","children","buttonType","disabled","href","className","restProps","classes","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAkBA,MAAMC,MAA6B,GAAEC,KAAD,IAAS;AAEzC,QAAM;AACFC,IAAAA,IADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA,UAHE;AAIFC,IAAAA,QAJE;AAKFC,IAAAA,IALE;AAMFC,IAAAA,SANE;AAOF,OAAGC;AAPD,MAQFP,KARJ;AAUA,QAAMQ,OAAO,GAAGV,UAAU,CAAC,KAAD,EAAOQ,SAAP,EACtB;AACI,KAAE,OAAMH,UAAW,EAAnB,GAAsBA,UAD1B;AAEI,KAAE,OAAMF,IAAK,EAAb,GAAgBA,IAFpB;AAGI,gBAAaE,UAAU,KAAK,MAAhB,IAA2BC;AAH3C,GADsB,CAA1B;;AAOA,MAAGD,UAAU,KAAK,MAAf,IAAyBE,IAA5B,EAAiC;AAC7B,wBACI;AACI,MAAA,SAAS,EAAEG,OADf;AAEI,MAAA,IAAI,EAAEH,IAFV;AAAA,SAGQE,SAHR;AAAA,gBAKKL;AALL;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAVD,MAUK;AACD,wBACI;AACI,MAAA,SAAS,EAAEM,OADf;AAEI,MAAA,QAAQ,EAAEJ,QAFd;AAAA,SAGQG,SAHR;AAAA,gBAKKL;AALL;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;AACJ,CAxCD;;KAAMH,M;AA0CNA,MAAM,CAACU,YAAP,GAAsB;AAClBL,EAAAA,QAAQ,EAAE,KADQ;AAElBD,EAAAA,UAAU,EAAE;AAFM,CAAtB;AAKA,eAAeJ,MAAf","sourcesContent":["import React from 'react';\r\nimport classnames from 'classnames'\r\n\r\nexport type ButtonSize = \"sm\" | \"lg\";\r\nexport type ButtonType = \"primary\" | \"danger\" | \"default\" | \"link\";\r\n\r\ninterface BaseButtonProps {\r\n    className?:string\r\n    disabled?: boolean\r\n    size?:ButtonSize\r\n    children?: React.ReactNode\r\n    buttonType?:ButtonType\r\n    href?:string\r\n}\r\n\r\ntype ButtonHTMLAttributes = BaseButtonProps & React.ButtonHTMLAttributes<HTMLElement>\r\ntype AnchorHTMLAttributes = BaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>\r\n// ts Partial<T> 将里面的每个属性都变为可选值  ?: \r\nexport type ButtonProps = Partial<ButtonHTMLAttributes & AnchorHTMLAttributes>\r\nconst Button: React.FC<ButtonProps>=(props)=>{\r\n\r\n    const { \r\n        size, \r\n        children, \r\n        buttonType,\r\n        disabled,\r\n        href,\r\n        className,\r\n        ...restProps\r\n    } = props\r\n\r\n    const classes = classnames('btn',className,\r\n        {\r\n            [`btn-${buttonType}`]:buttonType,\r\n            [`btn-${size}`]:size,\r\n            'disabled': (buttonType === \"link\") && disabled\r\n        },\r\n    )\r\n    if(buttonType === \"link\" && href){\r\n        return (\r\n            <a\r\n                className={classes}\r\n                href={href}\r\n                {...restProps}\r\n            >\r\n                {children}\r\n            </a>\r\n        )\r\n    }else{\r\n        return (\r\n            <button\r\n                className={classes}\r\n                disabled={disabled}\r\n                {...restProps}\r\n            >\r\n                {children}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nButton.defaultProps = {\r\n    disabled: false,\r\n    buttonType: \"default\"\r\n}\r\n\r\nexport default Button"]},"metadata":{},"sourceType":"module"}