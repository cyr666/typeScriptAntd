{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\yurongFiles\\\\vikingship\\\\src\\\\components\\\\Transition\\\\transition.tsx\";\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nconst Transition = props => {\n  const {\n    animation,\n    className,\n    children,\n    wrapper,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    classNames: className ? className : animation,\n    ...restProps,\n    children: wrapper ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 24\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Transition;\nTransition.defaultProps = {\n  appear: true,\n  unmountOnExit: true\n};\nexport default Transition;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transition\");","map":{"version":3,"sources":["D:/yurongFiles/vikingship/src/components/Transition/transition.tsx"],"names":["React","CSSTransition","Transition","props","animation","className","children","wrapper","restProps","defaultProps","appear","unmountOnExit"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAWA,MAAMC,UAAqC,GAAIC,KAAD,IAAW;AACrD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,QAAxB;AAAkCC,IAAAA,OAAlC;AAA2C,OAAGC;AAA9C,MAA4DL,KAAlE;AAEA,sBACI,QAAC,aAAD;AACI,IAAA,UAAU,EAAEE,SAAS,GAACA,SAAD,GAAWD,SADpC;AAAA,OAEQI,SAFR;AAAA,cAIMD,OAAO,gBAAE;AAAA,gBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,YAAF,GAA0BA;AAJvC;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAZD;;KAAMJ,U;AAcNA,UAAU,CAACO,YAAX,GAA0B;AACtBC,EAAAA,MAAM,EAAC,IADe;AAEtBC,EAAAA,aAAa,EAAE;AAFO,CAA1B;AAIA,eAAeT,UAAf","sourcesContent":["import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { CSSTransitionProps } from 'react-transition-group/CSSTransition';\r\n\r\n\r\ntype AnimationName = 'zoom-in-top' | 'zoom-in-left' | 'zoom-in-right'| 'zoom-in-bottom'\r\ntype TransitionProps = CSSTransitionProps & {\t   \r\n    animation?: AnimationName,\t   \r\n    children: React.ReactNode,\r\n    wrapper?: boolean\r\n}\r\n\r\nconst Transition: React.FC<TransitionProps> = (props) => {\r\n    const { animation, className, children, wrapper, ...restProps } = props;\r\n\r\n    return (\r\n        <CSSTransition\r\n            classNames={className?className:animation}\r\n            {...restProps}\r\n        >\r\n            { wrapper? <div>{children}</div> : children }\r\n            \r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nTransition.defaultProps = {\r\n    appear:true,\r\n    unmountOnExit: true\r\n}\r\nexport default Transition"]},"metadata":{},"sourceType":"module"}