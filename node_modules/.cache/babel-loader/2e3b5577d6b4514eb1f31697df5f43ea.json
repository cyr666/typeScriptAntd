{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\yurongFiles\\\\vikingship\\\\src\\\\components\\\\Alert\\\\alert.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Transition from '../Transition/transition';\n\nconst Alert = props => {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(true);\n  const {\n    alertType,\n    showIcon,\n    className,\n    children,\n    title\n  } = props;\n  const classes = classnames('alert', className, {\n    [`alert-${[alertType]}`]: alertType\n  }); // if(showAlert){\n  //     return (\n  //      )\n  // }else{\n  //     return <></>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Transition, {\n    in: showAlert,\n    timeout: 300,\n    animation: \"zoom-in-left\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes,\n      children: [showIcon ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"closeIcon\",\n        onClick: () => setShowAlert(false),\n        children: \"\\u5173\\u95ED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this) : '', title ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-title\",\n        children: [\" \", title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this) : \"\", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 78\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Alert, \"duEgEhUpBdoeYfRe1sjW721RL9s=\");\n\n_c = Alert;\nAlert.defaultProps = {\n  alertType: 'info',\n  showIcon: true\n};\nexport default Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["D:/yurongFiles/vikingship/src/components/Alert/alert.tsx"],"names":["React","useState","classnames","Transition","Alert","props","showAlert","setShowAlert","alertType","showIcon","className","children","title","classes","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAaA,MAAMC,KAA+B,GAAIC,KAAD,IAAW;AAAA;;AAE/C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,SAAvB;AAAkCC,IAAAA,QAAlC;AAA4CC,IAAAA;AAA5C,MAAsDP,KAA5D;AAEA,QAAMQ,OAAO,GAAGX,UAAU,CAAC,OAAD,EAASQ,SAAT,EAAmB;AACzC,KAAE,SAAQ,CAACF,SAAD,CAAY,EAAtB,GAAyBA;AADgB,GAAnB,CAA1B,CAL+C,CAS/C;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBAAO,QAAC,UAAD;AAAY,IAAA,EAAE,EAAEF,SAAhB;AAA2B,IAAA,OAAO,EAAE,GAApC;AAAyC,IAAA,SAAS,EAAC,cAAnD;AAAA,2BAAkE;AAAK,MAAA,SAAS,EAAIO,OAAlB;AAAA,iBAEjEJ,QAAQ,gBAAG;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAE,MAAIF,YAAY,CAAC,KAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA6E,EAFpB,EAKjEK,KAAK,gBAAG;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,wBAA+BA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAAkD,EALU,EAOpED,QAPoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlE;AAAA;AAAA;AAAA;AAAA,UAAP;AASH,CA1BD;;GAAMP,K;;KAAAA,K;AA4BNA,KAAK,CAACU,YAAN,GAAqB;AACjBN,EAAAA,SAAS,EAAE,MADM;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;AAKA,eAAeL,KAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport classnames from 'classnames';\r\nimport Transition from '../Transition/transition';\r\n\r\nexport type AlertType = 'success' | 'warning' | 'info' | 'error'\r\n\r\nexport interface BaseAlertProps{\r\n    alertType?: AlertType,\r\n    showIcon?: boolean,\r\n    className?: string,\r\n    children?: React.ReactNode,\r\n    title?: React.ReactNode,\r\n    onClose?: () => boolean\r\n}\r\n\r\nconst Alert: React.FC<BaseAlertProps> = (props) => {\r\n\r\n    const [showAlert, setShowAlert] = useState(true)\r\n    const { alertType, showIcon, className, children, title } = props;\r\n\r\n    const classes = classnames('alert',className,{\r\n        [`alert-${[alertType]}`]:alertType\r\n    })\r\n\r\n    // if(showAlert){\r\n    //     return (\r\n            \r\n    //      )\r\n    // }else{\r\n    //     return <></>\r\n    // }\r\n\r\n    return <Transition in={showAlert} timeout={300} animation='zoom-in-left'><div className = {classes}>\r\n        {\r\n            showIcon ? <span className='closeIcon' onClick={()=>setShowAlert(false)}>关闭</span> : ''\r\n        }\r\n        {\r\n            title ? <div className='alert-title'> {title} </div> : \"\"\r\n        }\r\n        {children} \r\n    </div></Transition>\r\n}\r\n\r\nAlert.defaultProps = {\r\n    alertType: 'info',\r\n    showIcon: true\r\n}\r\n\r\nexport default Alert\r\n"]},"metadata":{},"sourceType":"module"}