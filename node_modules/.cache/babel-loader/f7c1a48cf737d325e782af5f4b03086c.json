{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\yurongFiles\\\\vikingship\\\\src\\\\components\\\\Input\\\\input.tsx\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport Icon from '../Icon/icon';\n\nconst Input = props => {\n  const {\n    disabled,\n    size,\n    className,\n    icon,\n    prepand,\n    append,\n    children,\n    value,\n    onChange,\n    placeholder\n  } = props;\n  const classes = classnames('input', className, {\n    [`input-${size}`]: size,\n    'disabled': disabled,\n    'icon-con': icon !== undefined,\n    'append-con': append\n  });\n\n  const handleChange = e => {\n    if (onChange) {\n      onChange(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: disabled,\n      onChange: e => handleChange(e),\n      value: value,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), icon ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"input-icon\",\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        icon: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["D:/yurongFiles/vikingship/src/components/Input/input.tsx"],"names":["React","classnames","Icon","Input","props","disabled","size","className","icon","prepand","append","children","value","onChange","placeholder","classes","undefined","handleChange","e"],"mappings":";;AAAA,OAAOA,KAAP,MAAgF,OAAhF;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAgBA,MAAMC,KAA2B,GAAIC,KAAD,IAAW;AAC3C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA,IAA7B;AAAmCC,IAAAA,OAAnC;AAA4CC,IAAAA,MAA5C;AAAoDC,IAAAA,QAApD;AAA8DC,IAAAA,KAA9D;AAAqEC,IAAAA,QAArE;AAA+EC,IAAAA;AAA/E,MAA+FV,KAArG;AACA,QAAMW,OAAO,GAAGd,UAAU,CAAC,OAAD,EAASM,SAAT,EAAmB;AACzC,KAAE,SAAQD,IAAK,EAAf,GAAmBA,IADsB;AAEzC,gBAAYD,QAF6B;AAGzC,gBAAYG,IAAI,KAAKQ,SAHoB;AAIzC,kBAAcN;AAJ2B,GAAnB,CAA1B;;AAMA,QAAMO,YAAY,GAAIC,CAAD,IAAW;AAC5B,QAAGL,QAAH,EAAY;AACRA,MAAAA,QAAQ,CAACK,CAAD,CAAR;AACH;AACJ,GAJD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAIH,OAAlB;AAAA,4BACI;AACI,MAAA,QAAQ,EAAEV,QADd;AAEI,MAAA,QAAQ,EAAGa,CAAD,IAAmCD,YAAY,CAACC,CAAD,CAF7D;AAGI,MAAA,KAAK,EAAEN,KAHX;AAII,MAAA,WAAW,EAAEE;AAJjB;AAAA;AAAA;AAAA;AAAA,YADJ,EAQQN,IAAI,gBAAG;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,6BAA6B,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAH,GAA6D,EARzE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA3BD;;KAAML,K;AA6BN,eAAeA,KAAf","sourcesContent":["import React, { ChangeEvent, InputHTMLAttributes, ReactElement, useState } from 'react';\r\nimport { IconProp  } from '@fortawesome/fontawesome-svg-core';\r\nimport classnames from 'classnames';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\ntype InputSize = 'lg' | 'sm';\r\nexport interface InputProps extends Omit<InputHTMLAttributes<HTMLElement>, 'size'>{\r\n    disabled?: boolean;\r\n    size?: InputSize;\r\n    className?: string;\r\n    icon?: IconProp;\r\n    prepand?: string | ReactElement;\r\n    append?: string | ReactElement;\r\n    onChange?: (e:ChangeEvent<HTMLInputElement>)=>void;\r\n    value?:any;\r\n    placeholder?: string;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = (props) => {\r\n    const { disabled, size, className, icon, prepand, append, children, value, onChange, placeholder } = props\r\n    const classes = classnames('input',className,{\r\n        [`input-${size}`]: size,\r\n        'disabled': disabled,\r\n        'icon-con': icon !== undefined,\r\n        'append-con': append\r\n    })\r\n    const handleChange = (e:any) => {\r\n        if(onChange){\r\n            onChange(e)\r\n        }\r\n    }\r\n    return (\r\n        <div className = {classes}>\r\n            <input \r\n                disabled={disabled}\r\n                onChange={(e:ChangeEvent<HTMLInputElement>)=>handleChange(e)}\r\n                value={value}\r\n                placeholder={placeholder}\r\n            />\r\n            {\r\n                icon ? <span className='input-icon'><Icon icon={icon}/></span> : ''\r\n            }  \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Input"]},"metadata":{},"sourceType":"module"}